<% unless @error %>
<%= dashboard_preheader %>
<h1><%= @dashboard.name %>&nbsp;<small><%= @dashboard.description %></small></h1>
<%= dashboard_header %>
<%= erb :_interval_filter, :layout => false unless @interval_filters.empty? %>
<div class="row">
    <table>
    <% row = 1 %>
    <% grouped_graphs = @dashboard.graphs.in_groups_of(@graph_columns) %>
    <% grouped_graphs.each do |graphs| %>
        <tr>
        <% graphs.each do |graph| %>
            <% i = grouped_graphs.rindex(graphs) * @graph_columns + graphs.rindex(graph) %>
            <td>
            <% if graph %>
                <% img_base_url = [@top_level[@params[:category]].graphite_render, graph[:graphite][:url].to_s.force_encoding('UTF-8')].join "?" %>
                <% graphlot_url = URI.parse(img_base_url).tap{|x| x.path = "/graphlot/"}.to_s %>
                <a href='<%= uri_to_details(i) %>'>
                <%# We have to doubly-escape the title and description. The first escape will allow both the values %>
                <%# to safely fit in the attribute (which prevents injecting HTML around the img tag). The second escape
                <%# prevents using those properties to inject HTML into the popover itself. %>
                <img src='<%= img_base_url %>' rel="<%= row == 1 ? 'popover-below' : 'popover-above' %>" title="<%= h(h(graph[:graphite][:title])) %>" data-content="<%= h(h(graph[:graphite][:description])) %>&lt;div&gt;&lt;a href='<%= graphlot_url %>'&gt;Go to Graphlot&lt;/a&gt;&lt;/div&gt;"></a>
                <%= graph_caption(graph) %>
            <% end %>
            </td>
        <% end %>
        </tr>
    <% row += 1 %>
    <% end %>
    </table>
</div>
<script>
    $(function () {
      $("img[rel=popover-above]")
        .popover({
          placement: "above", delayIn: 1000, delayOut: 1000, html: true
        })
    })

    $(function () {
      $("img[rel=popover-below]")
        .popover({
          placement: "below", delayIn: 1000, delayOut: 1000, html: true
        })
    })
</script>
<% end %>
